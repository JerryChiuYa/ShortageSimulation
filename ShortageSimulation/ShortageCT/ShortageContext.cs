// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using ShortageSimulation.ShortageEF;

namespace ShortageSimulation.ShortageCT
{
    public partial class ShortageContext : DbContext
    {
        public ShortageContext()
        {
        }

        public ShortageContext(DbContextOptions<ShortageContext> options)
            : base(options)
        {
        }

        public virtual DbSet<FinishedGoods> FinishedGoods { get; set; }
        public virtual DbSet<Materials> Materials { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<FinishedGoods>(entity =>
            {
                entity.HasKey(e => e.Fid)
                    .HasName("PK__Finished__C1BEA5A219E592FA");

                entity.Property(e => e.Fid)
                    .HasColumnName("FID")
                    .HasDefaultValueSql("(NEXT VALUE FOR [sqFG])");

                entity.Property(e => e.Fname)
                    .IsRequired()
                    .HasColumnName("FName")
                    .HasMaxLength(100);

                entity.Property(e => e.Mname)
                    .IsRequired()
                    .HasColumnName("MName")
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<Materials>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasDefaultValueSql("(NEXT VALUE FOR [dbo].[sqML])");

                entity.Property(e => e.Mname)
                    .IsRequired()
                    .HasColumnName("MName")
                    .HasMaxLength(100);
            });

            modelBuilder.HasSequence("sqFG");

            modelBuilder.HasSequence("sqML");

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}